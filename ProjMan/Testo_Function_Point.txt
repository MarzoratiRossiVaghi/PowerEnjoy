In this section we will explain the interaction between PowerEnjoy and some sets of data provided by other independent applications/providers. In particular our system relies on two main external services, the Mapping Service and the Payment Service Provider. The information retrieved through the interaction between the system and these components sometimes need a certain amount of analysis and processing in order to be useful in our system. There may be situations in which the complexity of some of those interactions needs to be considered in a proper way, taking into account the dimension of the data exchanged and the amount of business logic required to process it. The list of the interactions is the following:Mapping Service:City Map Retrieval:This information is requested for the displaying of the city map on the user’s 	mobile application. 

Money Saving Mode Data (secondo me va high):
Money saving mode data are a collection of information that the user gets when activates that mode (ETA, Distance to the destination, Information about the path and so on). Although this data are computed by the mapping service, we need some logic operation in order to provide to the external service the information it requires (two pairs of coordinates, one for the user actual position and one for the Special Parking Area). Specifically, the choice of the second one is based on the final destination of the user, the availability of Special Parking Areas and the distribution of cars, so to jump to a conclusion we need several database queries, distance computation and comparisons. Taking into account these considerations, we decided to assign a medium (high) grade of complexity.

Distance Retrivial:
The distance between two pairs of coordinates is a simple data expressed with a double precision floating point value, computed by the Mapping Service. As inputs, that external component needs only the coordinates representing the start point and the end point. Since we only need to provide this kind of information (that we mainly store in the database) and we don’t have to apply any logic to the returning data (maybe just some formatting operation), we classify this operation with a low complexity.

